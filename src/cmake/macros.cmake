macro(make_persistent A)
foreach(argument ${A})
  string(FIND "${argument}" ":" typepos)
  string(FIND "${argument}" "=" valuepos)
  if (typepos GREATER_EQUAL 1 AND valuepos GREATER_EQUAL 1)
  math(EXPR typepos "${typepos}-2")
  string(SUBSTRING "${argument}" 2 "${typepos}" argname)
  math(EXPR typepos "${typepos}+3")
  math(EXPR valueoffset "${valuepos}-${typepos}")
  string(SUBSTRING "${argument}" "${typepos}" "${valueoffset}" argtype)
  math(EXPR valuepos "${valuepos}+1")
  string(SUBSTRING "${argument}" "${valuepos}" -1 argvalue)
  set("${argname}" "${argvalue}" CACHE "${argtype}" "")
  message("${argname} is ${argvalue} of type ${argtype}")
  endif()
endforeach()
endmacro()

macro(make_goopax_exec P)
  add_executable(${P} ${P}.cpp)
  target_link_libraries(${P} PRIVATE goopax::goopax)
  if (TARGET TBB::tbb)
    target_link_libraries(${P} PRIVATE TBB::tbb)
  endif()
  if (IOS)
    set_apple_properties(${P})
  elseif (WIN32)
    add_custom_command(
      TARGET ${P} POST_BUILD
      COMMAND ${CMAKE_COMMAND} -E copy_if_different
      "${goopax_DIR}/../../../lib/libgoopax64.dll"
      "$<TARGET_FILE_DIR:${P}>")
  endif()
  install(TARGETS ${P} DESTINATION bin)
endmacro()
